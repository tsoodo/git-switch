name: Release
on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write

jobs:
  build-and-release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: gs-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary: gs-linux-arm64
            cross: true
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: gs-darwin-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary: gs-darwin-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          
      - name: Install cross-compilation dependencies
        if: matrix.cross
        run: |
          sudo apt-get update
          sudo apt-get install -y g++-aarch64-linux-gnu libc6-dev-arm64-cross
          
      - name: Run tests
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'x86_64-unknown-linux-gnu'
        run: cargo test --verbose
          
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: ${{ matrix.cross && 'aarch64-linux-gnu-gcc' || '' }}
          
      - name: Prepare binary
        run: |
          mkdir -p release-binaries
          cp target/${{ matrix.target }}/release/gs release-binaries/${{ matrix.binary }}
          chmod +x release-binaries/${{ matrix.binary }}
          
      - name: Upload to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: release-binaries/${{ matrix.binary }}
          generate_release_notes: true
